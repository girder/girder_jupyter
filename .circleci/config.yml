version: 2

jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
      - image: girder/girder
      - image: mongo:latest

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - tox-env-{{ checksum "requirements2.txt" }}-{{ checksum "requirements3.txt" }}
            # fallback to using the latest cache if no exact match is found
            - tox-env-
          paths:
            - ../.tox
      - run:
          name: install python header for building scandir
          command: |
            sudo apt-get install python-dev
      - run:
          name: create venv
          command: |
            python3 -m venv ../venv

      - run:
          name: install tox
          command: |
            python3 -m venv ../venv
            . ../venv/bin/activate
            pip install tox

      - save_cache:
          paths:
            - ../.tox
          key: tox-env-{{ checksum "requirements2.txt" }}-{{ checksum "requirements3.txt" }}
      - run:
          name: install ansible
          command: |
            . ../venv/bin/activate
            pip install ansible
      - run:
          name: install Girder ansible role
          command: |
            . ../venv/bin/activate
            ansible-galaxy install --force --roles-path ./tests/ansible/roles girder.girder
            pip install girder_client
      - run:
          name: configure girder server using playbook
          command: |
            . ../venv/bin/activate
            cd ./tests/ansible/
            ansible-playbook --connection local -i "localhost,"  setup.yml -e "ansible_python_interpreter=/home/circleci/venv/bin/python"
      - run:
          name: run tests
          command: |
            . ../venv/bin/activate
            tox --workdir ../.tox
          environment:
            GIRDER_USER: jupyter
            GIRDER_PASSWORD: jupyter

      - store_artifacts:
          path: test-reports
          destination: test-reports
  release:
    docker:
      - image: circleci/python:3.6.1

    steps:
      - checkout
      - run:
          name: create venv
          command: |
            python3 -m venv ../venv
            . ../venv/bin/activate
      - run:
          name: install release dependencies
          command: |
            . ../venv/bin/activate
            pip install twine setuptools_scm
      - run:
          name: build the project
          command: |
            . ../venv/bin/activate
            python3 setup.py sdist
      - run:
          name: release to PyPI
          command: |
            . ../venv/bin/activate
            twine upload dist/*

workflows:
  version: 2
  ci:
    jobs:
      - build:
          filters:
            tags:
              only: /.*?/
      - release:
          requires:
            - build

          filters:
            tags:
              only: /.*?/
            branches:
              only:
                - master
